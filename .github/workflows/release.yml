name: Build SDK

on:
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Version tag to create (e.g., v1.2.3)'
        required: true
      branch:
        description: 'Branch to create tag from'
        required: true
        default: 'main'

concurrency:
  group: build-and-release
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Extract version from input
        run: echo "VERSION=${{ inputs.tag_version }}" >> $GITHUB_ENV

      - name: Create temporary branch for version update
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          TEMP_BRANCH="update-version-${VERSION}"
          git checkout -b "$TEMP_BRANCH"
          echo "TEMP_BRANCH=${TEMP_BRANCH}" >> $GITHUB_ENV

      - name: Update version in SDK file
        run: |
          sed -i "s/define('VERSION', '[0-9]\+\.[0-9]\+\.[0-9]\+');/define('VERSION', '${VERSION#v}');/" src/ZonosSdk.php

      - name: Commit and push version change
        run: |
          git add src/ZonosSdk.php
          git commit -m "Update version to ${VERSION}"
          git push origin "$TEMP_BRANCH"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag on latest commit
        run: |
          git tag "${VERSION}"
          git push origin "${VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        run: |
          gh pr create \
            --base "${{ inputs.branch }}" \
            --head "$TEMP_BRANCH" \
            --title "Update version to ${VERSION}" \
            --body "This PR updates the version to ${VERSION}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        run: |
          gh release create "${VERSION}" \
            --title "Release ${VERSION}" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
